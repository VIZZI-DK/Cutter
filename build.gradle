buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.40"
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.2.40'
    }
}


plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.10'
}
apply plugin: 'idea'

group = 'io.github.vizzi-dk'
archivesBaseName = 'cutter'
version '2.1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
sourceSets {
    main {
        compileKotlin.destinationDir = compileJava.destinationDir
    }
}

evaluationDependsOnChildren()

def defaultsProj = project(':Defaults')
jar.dependsOn(defaultsProj.tasks.getByPath("jar"))
jar.dependsOn(defaultsProj.tasks.sourcesJar)
jar.dependsOn(defaultsProj.tasks.javadocJar)

jar {
    archiveName = "cutter.jar"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    into('defaults') {
        from(fileTree(defaultsProj.file("build/libs")))
    }
}

test.dependsOn(jar)

test {
    workingDir = rootProject.rootDir
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}


dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.zeroturnaround:zt-zip:1.12'
    compile group: 'org.ow2.asm', name: 'asm-debug-all', version: '5.2'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.40"

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

idea {
    module {
        excludeDirs += project.file('forge')
        excludeDirs += project.file('gradle-test')
    }
}

